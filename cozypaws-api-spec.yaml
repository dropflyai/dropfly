openapi: 3.1.0
info:
  title: CozyPaws Outlet API
  version: 1.0.0
  description: Discount pet supplies dropshipping platform API
servers:
  - url: https://cozypaws-outlet.vercel.app
    description: Production
  - url: http://localhost:3000
    description: Local development

paths:
  /api/products/sync:
    post:
      summary: Sync products from CJ Dropshipping and AliExpress
      description: Cron-triggered endpoint to fetch products from suppliers and upsert to Supabase
      security:
        - CronSecret: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                suppliers:
                  type: array
                  items:
                    type: string
                    enum: [cj_dropshipping, aliexpress]
                  default: [cj_dropshipping, aliexpress]
                categoryIds:
                  type: array
                  items:
                    type: string
                  description: Category IDs to sync from suppliers
      responses:
        '200':
          description: Sync completed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  synced:
                    type: object
                    properties:
                      cj_dropshipping:
                        type: integer
                      aliexpress:
                        type: integer
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        supplier:
                          type: string
                        productId:
                          type: string
                        error:
                          type: string

  /api/products:
    get:
      summary: List products with filtering and pagination
      parameters:
        - name: category
          in: query
          schema:
            type: string
            enum: [dog, cat, small-pets, accessories]
        - name: sort
          in: query
          schema:
            type: string
            enum: [price_asc, price_desc, rating, newest]
            default: newest
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 24
        - name: search
          in: query
          schema:
            type: string
        - name: minPrice
          in: query
          schema:
            type: integer
            description: Minimum price in cents
        - name: maxPrice
          in: query
          schema:
            type: integer
            description: Maximum price in cents
      responses:
        '200':
          description: Products list
          content:
            application/json:
              schema:
                type: object
                properties:
                  products:
                    type: array
                    items:
                      $ref: '#/components/schemas/ProductListItem'
                  pagination:
                    type: object
                    properties:
                      page:
                        type: integer
                      limit:
                        type: integer
                      total:
                        type: integer
                      totalPages:
                        type: integer

  /api/products/{id}:
    get:
      summary: Get single product details
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Product details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDetail'
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/cart/checkout:
    post:
      summary: Create Stripe checkout session
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - items
                - successUrl
                - cancelUrl
              properties:
                items:
                  type: array
                  items:
                    type: object
                    required:
                      - id
                      - quantity
                    properties:
                      id:
                        type: string
                        format: uuid
                      quantity:
                        type: integer
                        minimum: 1
                        maximum: 10
                successUrl:
                  type: string
                  format: uri
                cancelUrl:
                  type: string
                  format: uri
                promoCode:
                  type: string
      responses:
        '200':
          description: Checkout session created
          content:
            application/json:
              schema:
                type: object
                properties:
                  sessionId:
                    type: string
                  url:
                    type: string
                    format: uri
                    description: Stripe-hosted checkout page URL
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/stripe-webhook:
    post:
      summary: Handle Stripe webhook events
      description: Processes checkout.session.completed and creates orders in Supabase, then submits to suppliers
      security:
        - StripeSignature: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                object:
                  type: string
                  enum: [event]
                type:
                  type: string
                  enum: [checkout.session.completed, payment_intent.succeeded]
                data:
                  type: object
                  properties:
                    object:
                      type: object
                      description: Stripe Session or PaymentIntent object
                      properties:
                        id:
                          type: string
                        customer_details:
                          type: object
                          properties:
                            email:
                              type: string
                            name:
                              type: string
                            address:
                              type: object
                              properties:
                                line1:
                                  type: string
                                line2:
                                  type: string
                                city:
                                  type: string
                                state:
                                  type: string
                                postal_code:
                                  type: string
                                country:
                                  type: string
                        metadata:
                          type: object
                          properties:
                            cartItems:
                              type: string
                              description: JSON-stringified cart items
      responses:
        '200':
          description: Webhook processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  received:
                    type: boolean

  /api/orders/{id}/track:
    get:
      summary: Get order tracking information
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Order tracking details
          content:
            application/json:
              schema:
                type: object
                properties:
                  orderId:
                    type: string
                    format: uuid
                  status:
                    type: string
                    enum: [pending, processing, shipped, delivered, cancelled]
                  supplierOrders:
                    type: array
                    items:
                      type: object
                      properties:
                        supplier:
                          type: string
                          enum: [cj_dropshipping, aliexpress]
                        supplierOrderId:
                          type: string
                        trackingNumber:
                          type: string
                        trackingUrl:
                          type: string
                        carrier:
                          type: string
                        status:
                          type: string
                        estimatedDelivery:
                          type: string
                          format: date
                  createdAt:
                    type: string
                    format: date-time
                  updatedAt:
                    type: string
                    format: date-time
        '404':
          description: Order not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    ProductListItem:
      type: object
      properties:
        id:
          type: string
          format: uuid
        sku:
          type: string
        name:
          type: string
        category:
          type: string
        priceCents:
          type: integer
        images:
          type: array
          items:
            type: string
            format: uri
        rating:
          type: number
          format: float
        stock:
          type: integer
        supplier:
          type: string
          enum: [cj_dropshipping, aliexpress]

    ProductDetail:
      type: object
      properties:
        id:
          type: string
          format: uuid
        sku:
          type: string
        name:
          type: string
        description:
          type: string
        category:
          type: string
        priceCents:
          type: integer
        costCents:
          type: integer
        supplier:
          type: string
          enum: [cj_dropshipping, aliexpress]
        supplierProductId:
          type: string
        stock:
          type: integer
        images:
          type: array
          items:
            type: string
            format: uri
        rating:
          type: number
          format: float
        reviews:
          type: array
          items:
            $ref: '#/components/schemas/Review'
        variants:
          type: array
          items:
            type: object
            properties:
              vid:
                type: string
              variantSku:
                type: string
              variantName:
                type: string
              priceCents:
                type: integer
              stock:
                type: integer
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    Review:
      type: object
      properties:
        id:
          type: string
          format: uuid
        productId:
          type: string
          format: uuid
        userId:
          type: string
          format: uuid
        rating:
          type: integer
          minimum: 1
          maximum: 5
        comment:
          type: string
        verifiedPurchase:
          type: boolean
        createdAt:
          type: string
          format: date-time

    CJProduct:
      type: object
      description: CJ Dropshipping API product response
      properties:
        pid:
          type: string
        productName:
          type: string
        productNameEn:
          type: string
        productSku:
          type: string
        productImage:
          type: string
        sellPrice:
          type: number
        categoryName:
          type: string
        variants:
          type: array
          items:
            type: object
            properties:
              vid:
                type: string
              variantSku:
                type: string
              variantSellPrice:
                type: number

    AliExpressProduct:
      type: object
      description: AliExpress API product response
      properties:
        product_id:
          type: string
        product_title:
          type: string
        product_main_image_url:
          type: string
        target_sale_price:
          type: string
        target_original_price:
          type: string
        sale_price:
          type: string
        original_price:
          type: string
        product_detail_url:
          type: string
        shop_id:
          type: string

    Error:
      type: object
      properties:
        error:
          type: string
        message:
          type: string
        statusCode:
          type: integer

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    CronSecret:
      type: apiKey
      in: header
      name: Authorization
    StripeSignature:
      type: apiKey
      in: header
      name: stripe-signature
